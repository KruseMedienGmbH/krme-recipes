{
    "manifests": {
        "krme/shopware-platform-tools": {
            "manifest": {
                "copy-from-recipe": {
                    "root/": "",
                    "tests/": "tests/",
                    "docker/": "docker/"
                },
                "post-install-output": [
                    ""
                ]
            },
            "files": {
                "docker/Dockerfile": {
                    "contents": [
                        "FROM krusemediendev/SHOP:6.6 AS builder",
                        "",
                        "FROM ubuntu:22.04",
                        "",
                        "COPY --from=builder / /",
                        "",
                        "RUN echo \"source /etc/profile\" >> /var/www/.bashrc && \\",
                        "    chown www-data:www-data -R /var/www/scripts && \\",
                        "    chmod 755 /*.sh",
                        "",
                        "USER dockware",
                        "",
                        "# make the apache folder the working directory",
                        "WORKDIR /var/www/html",
                        "",
                        "ENTRYPOINT [\"/bin/bash\", \"/entrypoint.sh\"]"
                    ],
                    "executable": false
                },
                "docker/Makefile": {
                    "contents": [
                        ".DEFAULT_GOAL := help",
                        "SHELL=/bin/bash",
                        "",
                        "help:",
                        "\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'",
                        ".PHONY: help",
                        "",
                        "CONTAINER_ID := $(shell docker ps -qf \"name=shopware6SHOP\")",
                        "CONTAINER_IMAGE := $(shell docker inspect -f \"{{.Config.Image}}\" $(shell docker ps -qf \"name=shopware6SHOP\"))",
                        "",
                        "build-image: ## Run build image",
                        "\tdocker cp ./cleanup.sh $(CONTAINER_ID):/tmp/",
                        "\tdocker exec $(CONTAINER_ID) bash -c \"sudo chmod +x /tmp/cleanup.sh && sudo /tmp/cleanup.sh\"",
                        "\tdocker commit $(CONTAINER_ID) $(CONTAINER_IMAGE)",
                        "\tdocker build -t $(CONTAINER_IMAGE) .",
                        "\tdocker login --username krusemediendev",
                        "\tdocker push $(CONTAINER_IMAGE)",
                        ".PHONY: build-image"
                    ],
                    "executable": false
                },
                "docker/cleanup.sh": {
                    "contents": [
                        "#!/usr/bin/env bash",
                        "",
                        "sudo killall mysqld || true && \\",
                        "sudo rm -f \"/var/run/mysqld/mysqld.sock.lock\" && \\",
                        "sudo chown -R mysql:mysql /var/lib/mysql /var/run/mysqld && \\",
                        "",
                        "# Update",
                        "apt-get update -y && \\",
                        "apt-get upgrade -y && \\",
                        "",
                        "# Update cli",
                        "curl -1sLf 'https://dl.cloudsmith.io/public/friendsofshopware/stable/setup.deb.sh' | sudo -E bash && \\",
                        "sudo apt install shopware-cli && \\",
                        "",
                        "dpkg --get-selections | grep php8.2 | cut -f1 | sed 's/php8.2/php8.3/g' | xargs sudo apt-get install -y && \\",
                        "",
                        "/var/www/.nvm/install.sh && \\",
                        "",
                        "sed -i 's/__PHP__FOLDER__ID/20230831/g' /etc/php/8.3/fpm/conf.d/20-xdebug.ini || true && \\",
                        "sed -i 's/__PHP_VERSION__/8.3/g' /etc/php/8.3/fpm/conf.d/20-xdebug.ini || true && \\",
                        "sed -i 's/__PHP__FOLDER__ID/20230831/g' /etc/php/8.3/cli/conf.d/20-xdebug.ini || true && \\",
                        "sed -i 's/__PHP_VERSION__/8.3/g' /etc/php/8.3/cli/conf.d/20-xdebug.ini || true && \\",
                        "",
                        "export NVM_DIR=\"$HOME/.nvm\"",
                        "[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm",
                        "[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\" && \\",
                        "",
                        "nvm install 22 && \\",
                        "",
                        "# L\u00f6scht alte Node.js Versionen",
                        "rm -rf /var/www/.nvm/versions/node/v12* && \\",
                        "rm -rf /var/www/.nvm/versions/node/v14* && \\",
                        "rm -rf /var/www/.nvm/versions/node/v16* && \\",
                        "rm -rf /var/www/.nvm/versions/node/v18* && \\",
                        "rm -rf /var/www/.nvm/.cache/* && \\",
                        "",
                        "# Autoremove nicht mehr ben\u00f6tigte Pakete",
                        "apt autoremove --purge -y && \\",
                        "",
                        "# L\u00f6scht Protokolldateien und loggt sie zur\u00fcck",
                        "rm -rf /var/log/*.gz /var/log/*.[0-9] && \\",
                        "truncate -s 0 /var/log/*.log && \\",
                        "",
                        "# Bereinigt APT Cache",
                        "apt-get clean && \\",
                        "apt-get autoremove --purge -y && \\",
                        "",
                        "# L\u00f6scht .git, Cache und node_modules",
                        "rm -rf .git && \\",
                        "rm -rf /var/cache/* && \\",
                        "find /var/www/html -type d -name 'node_modules' -exec rm -rf {} + && \\",
                        "find /var/www/html/custom -type d -name 'vendor' -exec rm -rf {} + && \\",
                        "rm -rf /var/www/.cache/* && \\",
                        "rm -rf /var/www/.npm/* && \\",
                        "rm -rf /var/www/html/var/log/* && \\",
                        "rm -rf /var/www/html/var/cache/* && \\",
                        "",
                        "# L\u00f6scht tempor\u00e4re Dateien",
                        "rm -rf /tmp/* && \\",
                        "",
                        "sudo service mysql stop && \\",
                        "sudo rm -f \"/var/run/mysqld/mysqld.sock.lock\" && \\",
                        "sudo chown -R mysql:mysql /var/lib/mysql /var/run/mysqld && \\",
                        "sudo service mysql start"
                    ],
                    "executable": false
                },
                "root/.gitattributes": {
                    "contents": [
                        "# Reference: https://git-scm.com/docs/gitattributes",
                        "",
                        "# Set the default behavior, in case people don't have core.autocrlf set",
                        "* text=auto",
                        "",
                        "# Force the following filetypes to have unix eols, so Windows does not break them",
                        "*.* text eol=lf",
                        "",
                        "# Windows forced line-endings",
                        "/.idea/* text eol=crlf",
                        "",
                        "# (binary is a macro for -text -diff)",
                        "*.png binary",
                        "*.jpg binary",
                        "*.jpeg binary",
                        "*.gif binary",
                        "*.ico binary",
                        "*.mov binary",
                        "*.mp4 binary",
                        "*.mp3 binary",
                        "*.gz binary",
                        "*.zip binary",
                        "*.7z binary",
                        "*.ttf binary",
                        "*.eot binary",
                        "*.woff binary",
                        "*.woff2 binary",
                        "*.pdf binary",
                        "*.bz2 binary",
                        "",
                        "# Set export ignored files and directories",
                        ".editorconfig export-ignore",
                        ".gitattributes export-ignore",
                        ".gitignore export-ignore"
                    ],
                    "executable": false
                },
                "root/.ludtwig-ignore": {
                    "contents": [
                        ""
                    ],
                    "executable": false
                },
                "root/.php-cs-fixer.dist.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "use PhpCsFixer\\Config;",
                        "use PhpCsFixer\\Finder;",
                        "use PhpCsFixer\\Runner\\Parallel\\ParallelConfigFactory;",
                        "use Symfony\\Component\\Filesystem\\Path;",
                        "",
                        "return (new Config())",
                        "    ->setParallelConfig(ParallelConfigFactory::detect())",
                        "    ->setRiskyAllowed(true)",
                        "    ->setRules([",
                        "        '@Symfony' => true,",
                        "        '@Symfony:risky' => true,",
                        "",
                        "        'blank_line_after_opening_tag' => false,",
                        "        'class_attributes_separation' => ['elements' => ['property' => 'one', 'method' => 'one']],",
                        "        'concat_space' => ['spacing' => 'one'],",
                        "        'declare_strict_types' => true,",
                        "        'fopen_flags' => false,",
                        "        'general_phpdoc_annotation_remove' => ['annotations' => ['copyright', 'category']],",
                        "        'linebreak_after_opening_tag' => false,",
                        "        'method_argument_space' => ['on_multiline' => 'ensure_fully_multiline'],",
                        "        'native_function_invocation' => [",
                        "            'scope' => 'namespaced',",
                        "            'strict' => false,",
                        "            'exclude' => ['ini_get'],",
                        "        ],",
                        "        'no_superfluous_phpdoc_tags' => ['allow_unused_params' => true, 'allow_mixed' => true],",
                        "        'no_useless_else' => true,",
                        "        'no_useless_return' => true,",
                        "        'ordered_class_elements' => true,",
                        "        'phpdoc_align' => ['align' => 'left'],",
                        "        'phpdoc_annotation_without_dot' => false,",
                        "        'phpdoc_line_span' => true,",
                        "        'phpdoc_order' => ['order' => ['param', 'throws', 'return']],",
                        "        'phpdoc_summary' => false,",
                        "        'phpdoc_to_comment' => false,",
                        "        'php_unit_dedicate_assert' => ['target' => 'newest'],",
                        "        'php_unit_dedicate_assert_internal_type' => true,",
                        "        'php_unit_mock' => true,",
                        "        'php_unit_test_case_static_method_calls' => ['methods' => [",
                        "            'any' => 'this',",
                        "            'never' => 'this',",
                        "            'atLeast' => 'this',",
                        "            'atLeastOnce' => 'this',",
                        "            'once' => 'this',",
                        "            'exactly' => 'this',",
                        "            'atMost' => 'this',",
                        "        ]],",
                        "        'self_accessor' => false,",
                        "        'single_line_throw' => false,",
                        "        'single_quote' => ['strings_containing_single_quote_chars' => true],",
                        "        'strict_comparison' => true,",
                        "        'strict_param' => true,",
                        "        'trailing_comma_in_multiline' => ['after_heredoc' => true, 'elements' => ['array_destructuring', 'arrays', 'match']],",
                        "        'void_return' => true,",
                        "        'yoda_style' => [",
                        "            'equal' => false,",
                        "            'identical' => false,",
                        "            'less_and_greater' => false,",
                        "        ],",
                        "    ])",
                        "    ->setUsingCache(true)",
                        "    ->setCacheFile(Path::join($_SERVER['SHOPWARE_TOOL_CACHE_ECS'] ?? 'var/cache/cs_fixer', 'cs_fixer.cache'))",
                        "    ->setFinder(",
                        "        (new Finder())",
                        "            ->in([",
                        "                __DIR__ . '/custom',",
                        "            ])",
                        "            ->exclude(['node_modules', '*/vendor/*', '*/tests/*'])",
                        "    );"
                    ],
                    "executable": false
                },
                "root/.shopware-project.yml": {
                    "contents": [
                        "build:",
                        "  keep_extension_source: true",
                        "  disable_asset_copy: false",
                        "  remove_extension_assets: false",
                        "  cleanup_paths:",
                        "    - imports",
                        "    - var/cache",
                        "    - var/log",
                        "deployment:",
                        "  extension-management:",
                        "    enabled: true",
                        "",
                        "    exclude:",
                        "      - 'FroshDevelopmentHelper'",
                        "",
                        "  hooks:",
                        "    pre-update: |",
                        "      ../../current/bin/dump.sh",
                        "  store:",
                        "    license-domain: '##DOMAIN##'",
                        "",
                        "",
                        "validation:",
                        "  ignore:",
                        "    - identifier: 'phpstan/shopware.forbidLocalDiskWrite'",
                        "    - identifier: 'phpstan/shopware.internalMethodCall'"
                    ],
                    "executable": false
                },
                "root/bitbucket-pipelines.yml": {
                    "contents": [
                        "image:",
                        "  name: shopware/shopware-cli:latest-php-8.3",
                        "",
                        "pipelines:",
                        "  custom:",
                        "    manual-renovate:",
                        "      import: shopwareplatformtools:main:manual-renovate",
                        "    manual-system-check:",
                        "      import: shopwareplatformtools:main:manual-system-check",
                        "    full-build-check:",
                        "      import: shopwareplatformtools:main:full-build-check",
                        "    dependency-check:",
                        "      import: shopwareplatformtools:main:dependency-check",
                        "  branches:",
                        "    develop:",
                        "      import: shopwareplatformtools:main:deploy-staging",
                        "    main:",
                        "      import: shopwareplatformtools:main:deploy-production",
                        "    updates/shopware-updates:",
                        "      import: shopwareplatformtools:main:updates/shopware-updates",
                        "  pull-requests:",
                        "    '**':",
                        "      import: shopwareplatformtools:main:pull-request"
                    ],
                    "executable": false
                },
                "root/deploy.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "",
                        "namespace Deployer;",
                        "",
                        "require_once 'vendor/krme/shopware-platform-tools/recipe/shopware.php';",
                        "",
                        "// Hosts",
                        "host('Integration')",
                        "    ->set('labels', [",
                        "        'stage' => 'integ',",
                        "        'env' => 'prod',",
                        "    ])",
                        "    ->set('hostname', '')",
                        "    ->set('domain', '')",
                        "    ->set('remote_user', '')",
                        "    ->set('http_user', '')",
                        "    ->set('http_group', '')",
                        "    ->set('deploy_path', '');",
                        "",
                        "host('Production')",
                        "    ->set('labels', [",
                        "        'stage' => 'prod',",
                        "        'env' => 'prod',",
                        "    ])",
                        "    ->set('hostname', '')",
                        "    ->set('domain', '')",
                        "    ->set('remote_user', '')",
                        "    ->set('http_user', '')",
                        "    ->set('http_group', '')",
                        "    ->set('deploy_path', '');",
                        ""
                    ],
                    "executable": false
                },
                "root/infection.json5": {
                    "contents": [
                        "{",
                        "    \"source\": {",
                        "        \"directories\": [",
                        "            \"src\"",
                        "        ],",
                        "        \"excludes\": [",
                        "            \"tests\",",
                        "        ]",
                        "    },",
                        "    \"timeout\": 60,",
                        "    \"logs\": {",
                        "        \"text\": \"infection.log\",",
                        "        \"html\": \"infection.html\",",
                        "        \"summary\": \"summary.log\",",
                        "        \"json\": \"infection-log.json\",",
                        "        \"perMutator\": \"per-mutator.md\",",
                        "        \"summaryJson\": \"summary.json\"",
                        "    },",
                        "    \"tmpDir\": \"./var/tmp-folder\",",
                        "    \"phpUnit\": {",
                        "        \"configDir\": \"./\",",
                        "        \"customPath\": \"./vendor/bin/phpunit\"",
                        "    },",
                        "    \"mutators\": {",
                        "        \"global-ignore\": [",
                        "            \"FooClass::__construct\"",
                        "        ],",
                        "        \"global-ignoreSourceCodeByRegex\": [",
                        "            \"Assert::.*\"",
                        "        ],",
                        "        \"@default\": true,",
                        "        \"@function_signature\": false,",
                        "        \"TrueValue\": {",
                        "            \"ignore\": [",
                        "                \"NameSpace\\\\*\\\\Class::method\"",
                        "            ],",
                        "            \"ignoreSourceCodeByRegex\": [",
                        "                \"\\\\$this->logger.*\"",
                        "            ]",
                        "        }",
                        "    },",
                        "    \"testFramework\":\"phpunit\",",
                        "    \"bootstrap\":\"./tests/TestBootstrap.php\"",
                        "}"
                    ],
                    "executable": false
                },
                "root/phpstan.neon": {
                    "contents": [
                        "parameters:",
                        "    phpVersion: 80300",
                        "    level: 8",
                        "    tmpDir: var/cache/phpstan",
                        "    inferPrivatePropertyTypeFromConstructor: true",
                        "    treatPhpDocTypesAsCertain: false",
                        "",
                        "    bootstrapFiles:",
                        "        - vendor/shopware/core/DevOps/StaticAnalyze/phpstan-bootstrap.php",
                        "",
                        "    paths:",
                        "        - vendor/krme",
                        "",
                        "    symfony:",
                        "        constantHassers: false",
                        "        containerXmlPath: 'var/cache/static_phpstan_dev/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelPhpstan_devDebugContainer.xml'",
                        "        consoleApplicationLoader: vendor/shopware/core/DevOps/StaticAnalyze/console-application.php",
                        ""
                    ],
                    "executable": false
                },
                "root/phpunit.xml.dist": {
                    "contents": [
                        "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                        "<phpunit xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                        "         xsi:noNamespaceSchemaLocation=\"https://schema.phpunit.de/10.4/phpunit.xsd\"",
                        "         bootstrap=\"tests/TestBootstrap.php\"",
                        "         executionOrder=\"random\"",
                        "         cacheDirectory=\".phpunit.cache\">",
                        "    <php>",
                        "        <ini name=\"error_reporting\" value=\"-1\"/>",
                        "        <env name=\"APP_ENV\" value=\"test\"/>",
                        "        <env name=\"TEST_TOKEN\" value=\"none\"/>",
                        "        <env name=\"APP_DEBUG\" value=\"1\"/>",
                        "        <env name=\"APP_SECRET\" value=\"s$cretf0rt3st\"/>",
                        "        <env name=\"SYMFONY_DEPRECATIONS_HELPER\" value=\"weak\"/>",
                        "        <server name=\"KERNEL_CLASS\" value=\"Shopware\\Core\\Kernel\"/>",
                        "    </php>",
                        "    <testsuites>",
                        "        <testsuite name=\"Krme Shopware 6 Plugin\">",
                        "            <directory>tests</directory>",
                        "        </testsuite>",
                        "    </testsuites>",
                        "    <coverage/>",
                        "    <source>",
                        "        <include>",
                        "            <directory suffix=\".php\">./src</directory>",
                        "        </include>",
                        "        <exclude>",
                        "            <directory suffix=\".php\">./bin</directory>",
                        "            <directory suffix=\".php\">./tests</directory>",
                        "            <directory suffix=\".php\">./vendor</directory>",
                        "            <directory suffix=\".php\">./var</directory>",
                        "            <file>ecs.php</file>",
                        "            <file>rector.php</file>",
                        "            <file>vendor-builder.php</file>",
                        "        </exclude>",
                        "    </source>",
                        "</phpunit>",
                        ""
                    ],
                    "executable": false
                },
                "root/rector.php": {
                    "contents": [
                        "<?php",
                        "",
                        "// rector.php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/*",
                        " * (c) KruseMedien GmbH <info@krusemedien.com>",
                        " * For the full copyright and license information, please view the LICENSE",
                        " * file that was distributed with this source code.",
                        " */",
                        "",
                        "use Frosh\\Rector\\Rule\\ClassConstructor\\RemoveArgumentFromClassConstructRector;",
                        "use Frosh\\Rector\\Rule\\ClassMethod\\AddArgumentToClassWithoutDefaultRector;",
                        "use Rector\\CodingStyle\\Rector\\String_\\SymplifyQuoteEscapeRector;",
                        "use Rector\\Config\\RectorConfig;",
                        "use Rector\\DeadCode\\Rector\\Cast\\RecastingRemovalRector;",
                        "use Rector\\DeadCode\\Rector\\ClassMethod\\RemoveUnusedPrivateMethodRector;",
                        "use Rector\\DeadCode\\Rector\\StaticCall\\RemoveParentCallWithoutParentRector;",
                        "use Rector\\Naming\\Rector\\Class_\\RenamePropertyToMatchTypeRector;",
                        "use Rector\\Privatization\\Rector\\ClassMethod\\PrivatizeFinalClassMethodRector;",
                        "use Rector\\Privatization\\Rector\\Property\\PrivatizeFinalClassPropertyRector;",
                        "use Rector\\ValueObject\\PhpVersion;",
                        "use Frosh\\Rector\\Set\\ShopwareSetList;",
                        "",
                        "return RectorConfig::configure()",
                        "    ->withPreparedSets(",
                        "        deadCode: true,",
                        "        codeQuality: true,",
                        "        codingStyle: true,",
                        "        typeDeclarations: true,",
                        "        privatization: true,",
                        "        naming: true,",
                        "        instanceOf: true,",
                        "        strictBooleans: true,",
                        "        symfonyCodeQuality: true",
                        "    )",
                        "    ->withSymfonyContainerXml(__DIR__ . '/var/cache/static_phpstan_dev/Shopware_Core_DevOps_StaticAnalyze_StaticAnalyzeKernelPhpstan_devDebugContainer.xml')",
                        "    ->withSkip(",
                        "        []",
                        "    )",
                        "    ->withPaths([",
                        "        __DIR__ . '/custom',",
                        "    ])",
                        "    ->withBootstrapFiles([",
                        "        __DIR__ . '/vendor/shopware/core/DevOps/StaticAnalyze/phpstan-bootstrap.php',",
                        "    ])",
                        "    ->withPhpVersion(PhpVersion::PHP_83)",
                        "    ->withAutoloadPaths([",
                        "        __DIR__ . '/vendor/store.shopware.com',",
                        "    ])",
                        "    ->withPhpSets(",
                        "        php83: true",
                        "    )",
                        "    ->withSets([",
                        "        ShopwareSetList::SHOPWARE_6_7_0,",
                        "        ShopwareSetList::SHOPWARE_6_6_0,",
                        "        ShopwareSetList::SHOPWARE_6_5_0,",
                        "    ])",
                        "    ->withSkip(",
                        "        [",
                        "            RenamePropertyToMatchTypeRector::class,",
                        "            RemoveArgumentFromClassConstructRector::class,",
                        "            AddArgumentToClassWithoutDefaultRector::class,",
                        "            PrivatizeFinalClassPropertyRector::class,",
                        "            RemoveArgumentFromClassConstructRector::class,",
                        "            AddArgumentToClassWithoutDefaultRector::class,",
                        "            RenamePropertyToMatchTypeRector::class,",
                        "            RecastingRemovalRector::class,",
                        "        ]",
                        "    )",
                        "    ->withParallel();",
                        ""
                    ],
                    "executable": false
                },
                "root/rulesets.xml": {
                    "contents": [
                        "<?xml version=\"1.0\"?>",
                        "<ruleset name=\"PHPMD ruleset\"",
                        "         xmlns=\"http://pmd.sf.net/ruleset/1.0.0\"",
                        "         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                        "         xsi:schemaLocation=\"http://pmd.sf.net/ruleset/1.0.0",
                        "                       http://pmd.sf.net/ruleset_xml_schema.xsd\"",
                        "         xsi:noNamespaceSchemaLocation=\"",
                        "                       http://pmd.sf.net/ruleset_xml_schema.xsd\">",
                        "    <description>",
                        "       PHPMD ruleset",
                        "    </description>",
                        "    <rule ref=\"rulesets/codesize.xml\" />",
                        "    <rule ref=\"rulesets/design.xml\" />",
                        "</ruleset>"
                    ],
                    "executable": false
                },
                "tests/TestBootstrap.php": {
                    "contents": [
                        "<?php declare(strict_types=1);",
                        "",
                        "require __DIR__ . '/../vendor/shopware/core/TestBootstrapper.php';",
                        "require __DIR__ . '/../vendor/shopware/core/Framework/Adapter/Kernel/KernelFactory.php';",
                        "",
                        "use Shopware\\Core\\Framework\\Adapter\\Kernel\\KernelFactory;",
                        "use Shopware\\Core\\TestBootstrapper;",
                        "",
                        "$loader = (new TestBootstrapper())",
                        "    ->setDatabaseUrl('mysql://root:root@127.0.0.1:3306/shopware')",
                        "    ->setLoadEnvFile(true)",
                        "    ->setPlatformEmbedded(false)",
                        "    ->bootstrap()",
                        "    ->getClassLoader();",
                        "",
                        "$loader->addPsr4('Plugin\\\\Tests\\\\', __DIR__ . '/../custom/static-plugins/Plugin/tests');",
                        "",
                        "return $loader;"
                    ],
                    "executable": false
                }
            },
            "ref": "3b24419380a6757e07e437fc9ca3f5cd5ba0e487"
        }
    }
}
