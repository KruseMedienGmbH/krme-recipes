{
    "manifests": {
        "krme/code-quality-meta": {
            "manifest": {
                "copy-from-recipe": {
                    "vendor-bin/": "vendor-bin/",
                    "root/": ""
                },
                "gitignore": [
                    "phpstan.neon",
                    "/vendor-bin/**/vendor/"
                ],
                "scripts": {
                    "bin": "echo 'bin not installed'",
                    "post-install-cmd": [
                        "Krme\\Shopware6PluginScripts\\Core\\PostInstallScripts::postUpdateCmd"
                    ],
                    "post-update-cmd": [
                        "Krme\\Shopware6PluginScripts\\Core\\PostInstallScripts::postUpdateCmd"
                    ],
                    "fix": [
                        "Krme\\Shopware6PluginScripts\\Core\\CodeStyleScripts::rectorFix",
                        "Krme\\Shopware6PluginScripts\\Core\\CodeStyleScripts::ecsFix",
                        "Krme\\Shopware6PluginScripts\\Administration\\EslintScripts::administrationFix",
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::storefrontFix",
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::stylelintFix"
                    ],
                    "lint": [
                        "Krme\\Shopware6PluginScripts\\Core\\CodeStyleScripts::rectorLint",
                        "Krme\\Shopware6PluginScripts\\Core\\CodeStyleScripts::ecsLint",
                        "Krme\\Shopware6PluginScripts\\Administration\\EslintScripts::administrationLint",
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::storefrontLint",
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::stylelintLint"
                    ],
                    "build": [
                        "~/html/bin/build-js.sh"
                    ],
                    "prepare": [
                        "Krme\\Shopware6PluginScripts\\Core\\ShopwareCliScripts::prepare"
                    ],
                    "zip": [
                        "Krme\\Shopware6PluginScripts\\Core\\ShopwareCliScripts::zip"
                    ],
                    "admin-build": [
                        "~/html/bin/build-administration.sh"
                    ],
                    "storefront-build": [
                        "~/html/bin/build-storefront.sh"
                    ],
                    "storefront-fix": [
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::storefrontFix"
                    ],
                    "stylelint-fix": [
                        "Krme\\Shopware6PluginScripts\\Storefront\\EslintScripts::stylelintFix"
                    ],
                    "phpstan": [
                        "Krme\\Shopware6PluginScripts\\Core\\PhpStanScripts::phpstan"
                    ],
                    "prepare-push": [
                        "@fix",
                        "@phpstan",
                        "@admin-build",
                        "@storefront-build"
                    ],
                    "phpunit": [
                        "Krme\\Shopware6PluginScripts\\Core\\PhpUnitScripts::phpunit"
                    ],
                    "phpunit-coverage": [
                        "Krme\\Shopware6PluginScripts\\Core\\PhpUnitScripts::phpunitCoverage"
                    ]
                },
                "post-install-output": [
                    "  * <fg=blue>Setup</> execute:",
                    "    <comment>composer require --dev bamarni/composer-bin-plugin && jq '.extra += {\"bamarni-bin\": {\"bin-links\": false, \"forward-command\": true}}' composer.json > composer.tmp && mv composer.tmp composer.json && composer install</comment>",
                    "",
                    "  * <fg=blue>Recommended</>",
                    "    The following code snippet shows examples of how to use code quality tools to check and improve the quality of your code.",
                    "    You can customize the plugin paths based on your project's needs.",
                    "    <comment>{",
                    "        \"scripts\": {",
                    "            \"ecs\": \"@php vendor-bin/cs-fixer/vendor/bin/ecs check custom/static-plugins custom/plugins\",",
                    "            \"ecs-fix\": \"@php vendor-bin/cs-fixer/vendor/bin/ecs check --fix custom/static-plugins custom/plugins\",",
                    "            \"phpstan\": [",
                    "              \"@php vendor/frosh/code-quality-meta/phpstan-bootstrap.php\",",
                    "              \"@php vendor-bin/phpstan/vendor/bin/phpstan analyze custom/static-plugins custom/plugins\"",
                    "            ],",
                    "            \"rector-dry\": \"@php vendor-bin/rector/vendor/bin/rector process --config=rector.php --dry-run\",",
                    "            \"rector\": \"@php vendor-bin/rector/vendor/bin/rector process --config=rector.php\",",
                    "            \"commit\": [",
                    "                \"@phpstan\",",
                    "                \"@rector\",",
                    "                \"@ecs-fix\",",
                    "                \"@php bin/console dal:validate\"",
                    "            ]",
                    "        }",
                    "    }</comment>"
                ]
            },
            "files": {
                "root/.gitattributes": {
                    "contents": [
                        "# Reference: https://git-scm.com/docs/gitattributes",
                        "",
                        "# Set the default behavior, in case people don't have core.autocrlf set",
                        "* text=auto",
                        "",
                        "# Force the following filetypes to have unix eols, so Windows does not break them",
                        "*.* text eol=lf",
                        "",
                        "# Windows forced line-endings",
                        "/.idea/* text eol=crlf",
                        "",
                        "# (binary is a macro for -text -diff)",
                        "*.png binary",
                        "*.jpg binary",
                        "*.jpeg binary",
                        "*.gif binary",
                        "*.ico binary",
                        "*.mov binary",
                        "*.mp4 binary",
                        "*.mp3 binary",
                        "*.gz binary",
                        "*.zip binary",
                        "*.7z binary",
                        "*.ttf binary",
                        "*.eot binary",
                        "*.woff binary",
                        "*.woff2 binary",
                        "*.pdf binary",
                        "*.bz2 binary",
                        "",
                        "# Set export ignored files and directories",
                        ".editorconfig export-ignore",
                        ".gitattributes export-ignore",
                        ".gitignore export-ignore"
                    ],
                    "executable": false
                },
                "root/.gitignore": {
                    "contents": [
                        "# Reference: https://git-scm.com/docs/gitignore",
                        "",
                        "# Editor-specific metadata folders",
                        ".idea/",
                        ".vscode/",
                        "",
                        "# Logfiles",
                        "*.log",
                        "",
                        "# Node mmodules and lock files",
                        "node_modules/",
                        "package-lock.json",
                        "",
                        "# Composer modules and lock files",
                        "vendor/",
                        "composer.lock",
                        "auth.json",
                        "",
                        "var/"
                    ],
                    "executable": false
                },
                "root/ecs.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/*",
                        " * (c) KruseMedien GmbH <info@krusemedien.com>",
                        " * For the full copyright and license information, please view the LICENSE",
                        " * file that was distributed with this source code.",
                        " */",
                        "",
                        "use Symplify\\EasyCodingStandard\\Configuration\\ECSConfigBuilder;",
                        "",
                        "// Include custom ECS configuration",
                        "$customConfigPath = __DIR__ . '/vendor-bin/cs/custom_ecs.php';",
                        "",
                        "/**",
                        " * @var ECSConfigBuilder $customEcsConfig",
                        " */",
                        "$customEcsConfig = include $customConfigPath;",
                        "",
                        "return $customEcsConfig->withCache(",
                        "    $_SERVER['SHOPWARE_TOOL_CACHE_ECS'] ?? 'var/cache/cs_fixer',",
                        "    'Shopware6Theme'",
                        ")",
                        "    ->withParallel();"
                    ],
                    "executable": false
                },
                "root/phpstan.neon": {
                    "contents": [
                        "parameters:",
                        "    level: 8",
                        "    tmpDir: var/cache/phpstan",
                        "    inferPrivatePropertyTypeFromConstructor: true",
                        "    checkMissingIterableValueType: false",
                        "    checkGenericClassInNonGenericObjectType: false",
                        "",
                        "    excludePaths:",
                        "            - */node_modules/",
                        "",
                        "    ignoreErrors:",
                        ""
                    ],
                    "executable": false
                },
                "root/rector.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/*",
                        " * (c) KruseMedien GmbH <info@krusemedien.com>",
                        " * For the full copyright and license information, please view the LICENSE",
                        " * file that was distributed with this source code.",
                        " */",
                        "",
                        "use Rector\\Config\\RectorConfig;",
                        "",
                        "$customConfigPath = __DIR__ . '/vendor-bin/rector/custom_rector.php';",
                        "",
                        "/**",
                        " * @var callable(RectorConfig): void $customRectorConfig",
                        " */",
                        "$customRectorConfig = include $customConfigPath;",
                        "",
                        "return static function (RectorConfig $rectorConfig) use ($customRectorConfig): void {",
                        "    // Apply the custom Rector configurations",
                        "    $customRectorConfig($rectorConfig);",
                        "",
                        "};"
                    ],
                    "executable": false
                },
                "vendor-bin/cs/composer.json": {
                    "contents": [
                        "{",
                        "  \"require-dev\": {",
                        "    \"symplify/easy-coding-standard\": \"^12.1.8\",",
                        "    \"kubawerlos/php-cs-fixer-custom-fixers\": \"*\",",
                        "    \"friendsofphp/php-cs-fixer\": \"*\",",
                        "    \"theofidry/composer-inheritance-plugin\": \"^1.2\",",
                        "    \"phpmd/phpmd\": \"^2.15.0\"",
                        "  },",
                        "  \"config\": {",
                        "    \"allow-plugins\": {",
                        "      \"wikimedia/composer-merge-plugin\": true,",
                        "      \"theofidry/composer-inheritance-plugin\": true",
                        "    }",
                        "  }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/cs/custom_ecs.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/*",
                        " * (c) KruseMedien GmbH <info@krusemedien.com>",
                        " * For the full copyright and license information, please view the LICENSE",
                        " * file that was distributed with this source code.",
                        " */",
                        "",
                        "use PhpCsFixer\\Fixer\\CastNotation\\ModernizeTypesCastingFixer;",
                        "use PhpCsFixer\\Fixer\\ClassNotation\\ClassAttributesSeparationFixer;",
                        "use PhpCsFixer\\Fixer\\Comment\\HeaderCommentFixer;",
                        "use PhpCsFixer\\Fixer\\ConstantNotation\\NativeConstantInvocationFixer;",
                        "use PhpCsFixer\\Fixer\\FunctionNotation\\FopenFlagsFixer;",
                        "use PhpCsFixer\\Fixer\\FunctionNotation\\MethodArgumentSpaceFixer;",
                        "use PhpCsFixer\\Fixer\\FunctionNotation\\NativeFunctionInvocationFixer;",
                        "use PhpCsFixer\\Fixer\\FunctionNotation\\NullableTypeDeclarationForDefaultNullValueFixer;",
                        "use PhpCsFixer\\Fixer\\FunctionNotation\\VoidReturnFixer;",
                        "use PhpCsFixer\\Fixer\\Operator\\BinaryOperatorSpacesFixer;",
                        "use PhpCsFixer\\Fixer\\Operator\\ConcatSpaceFixer;",
                        "use PhpCsFixer\\Fixer\\Operator\\OperatorLinebreakFixer;",
                        "use PhpCsFixer\\Fixer\\Phpdoc\\GeneralPhpdocAnnotationRemoveFixer;",
                        "use PhpCsFixer\\Fixer\\Phpdoc\\NoSuperfluousPhpdocTagsFixer;",
                        "use PhpCsFixer\\Fixer\\Phpdoc\\PhpdocLineSpanFixer;",
                        "use PhpCsFixer\\Fixer\\Phpdoc\\PhpdocOrderFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitConstructFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitDedicateAssertFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitDedicateAssertInternalTypeFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitMockFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitMockShortWillReturnFixer;",
                        "use PhpCsFixer\\Fixer\\PhpUnit\\PhpUnitTestCaseStaticMethodCallsFixer;",
                        "use PhpCsFixer\\Fixer\\ReturnNotation\\NoUselessReturnFixer;",
                        "use PhpCsFixer\\Fixer\\Strict\\DeclareStrictTypesFixer;",
                        "use PhpCsFixer\\Fixer\\StringNotation\\SingleQuoteFixer;",
                        "use PhpCsFixer\\Fixer\\Whitespace\\BlankLineBeforeStatementFixer;",
                        "use PhpCsFixer\\Fixer\\Whitespace\\CompactNullableTypehintFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\NoImportFromGlobalNamespaceFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\NoSuperfluousConcatenationFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\NoUselessCommentFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\NoUselessParenthesisFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\NoUselessStrlenFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\PhpdocTypesCommaSpacesFixer;",
                        "use PhpCsFixerCustomFixers\\Fixer\\SingleSpaceAfterStatementFixer;",
                        "use Symplify\\CodingStandard\\Fixer\\LineLength\\LineLengthFixer;",
                        "use Symplify\\CodingStandard\\Fixer\\Spacing\\StandaloneLineConstructorParamFixer;",
                        "use Symplify\\EasyCodingStandard\\Config\\ECSConfig;",
                        "use Symplify\\EasyCodingStandard\\ValueObject\\Option;",
                        "use Symplify\\EasyCodingStandard\\ValueObject\\Set\\SetList;",
                        "",
                        "return ECSConfig::configure()",
                        "    ->withSets([",
                        "        SetList::CLEAN_CODE,",
                        "        SetList::ARRAY,",
                        "        SetList::CONTROL_STRUCTURES,",
                        "        SetList::STRICT,",
                        "        SetList::PSR_12,",
                        "    ])->withRules([",
                        "        ModernizeTypesCastingFixer::class,",
                        "        FopenFlagsFixer::class,",
                        "        NativeConstantInvocationFixer::class,",
                        "        NullableTypeDeclarationForDefaultNullValueFixer::class,",
                        "        VoidReturnFixer::class,",
                        "        OperatorLinebreakFixer::class,",
                        "        PhpdocLineSpanFixer::class,",
                        "        PhpdocOrderFixer::class,",
                        "        PhpUnitConstructFixer::class,",
                        "        PhpUnitDedicateAssertInternalTypeFixer::class,",
                        "        PhpUnitMockFixer::class,",
                        "        PhpUnitMockShortWillReturnFixer::class,",
                        "        PhpUnitTestCaseStaticMethodCallsFixer::class,",
                        "        NoUselessReturnFixer::class,",
                        "        DeclareStrictTypesFixer::class,",
                        "        BlankLineBeforeStatementFixer::class,",
                        "        CompactNullableTypehintFixer::class,",
                        "        NoImportFromGlobalNamespaceFixer::class,",
                        "        NoSuperfluousConcatenationFixer::class,",
                        "        NoUselessCommentFixer::class,",
                        "        SingleSpaceAfterStatementFixer::class,",
                        "        NoUselessParenthesisFixer::class,",
                        "        NoUselessStrlenFixer::class,",
                        "        PhpdocTypesCommaSpacesFixer::class,",
                        "        StandaloneLineConstructorParamFixer::class,",
                        "    ])",
                        "        ->withConfiguredRule(HeaderCommentFixer::class, [",
                        "        'header' => '(c) KruseMedien GmbH <info@krusemedien.com>",
                        "For the full copyright and license information, please view the LICENSE",
                        "file that was distributed with this source code.',",
                        "        'separate' => 'both',",
                        "        'location' => 'after_declare_strict',",
                        "        'comment_type' => 'comment',",
                        "    ])->withConfiguredRule(ClassAttributesSeparationFixer::class, [",
                        "        'elements' => [",
                        "            'property' => 'one',",
                        "            'method' => 'one',",
                        "        ],",
                        "    ])->withConfiguredRule(MethodArgumentSpaceFixer::class, [",
                        "        'on_multiline' => 'ensure_fully_multiline',",
                        "    ])->withConfiguredRule(NativeFunctionInvocationFixer::class, [",
                        "        'include' => [NativeFunctionInvocationFixer::SET_COMPILER_OPTIMIZED],",
                        "        'scope' => 'namespaced',",
                        "        'strict' => false,",
                        "    ])->withConfiguredRule(LineLengthFixer::class, [",
                        "        LineLengthFixer::LINE_LENGTH => 120,",
                        "        LineLengthFixer::INLINE_SHORT_LINES => false,",
                        "    ])->withConfiguredRule(ConcatSpaceFixer::class, [",
                        "        'spacing' => 'one',",
                        "    ])->withConfiguredRule(GeneralPhpdocAnnotationRemoveFixer::class, [",
                        "        'annotations' => ['copyright', 'category'],",
                        "    ])->withConfiguredRule(NoSuperfluousPhpdocTagsFixer::class, [",
                        "        'allow_unused_params' => true,",
                        "        'allow_mixed' => true,",
                        "    ])->withConfiguredRule(PhpUnitDedicateAssertFixer::class, [",
                        "        'target' => 'newest',",
                        "    ])->withConfiguredRule(SingleQuoteFixer::class, [",
                        "        'strings_containing_single_quote_chars' => true,",
                        "    ])",
                        "        // workaround for https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/issues/5495",
                        "        ->withConfiguredRule(BinaryOperatorSpacesFixer::class, [",
                        "        'operators' => [",
                        "            '|' => null,",
                        "            '&' => null,",
                        "        ],",
                        "    ])",
                        "        ->withPaths([",
                        "            __DIR__ . '/../../ecs.php',",
                        "            __DIR__ . '/../../rector.php',",
                        "            __DIR__ . '/../../src'",
                        "        ])->withSpacing(indentation: Option::INDENTATION_SPACES, lineEnding: '\\n');",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/phpstan/composer.json": {
                    "contents": [
                        "{",
                        "  \"require-dev\": {",
                        "    \"phpstan/extension-installer\": \"^1.1.0\",",
                        "    \"phpstan/phpstan\": \"~1.10.0\",",
                        "    \"phpstan/phpstan-doctrine\": \"~1.3.9\",",
                        "    \"phpstan/phpstan-phpunit\": \"~1.1.1\",",
                        "    \"phpstan/phpstan-symfony\": \"~1.2.5\",",
                        "    \"theofidry/composer-inheritance-plugin\": \"^1.2\"",
                        "  },",
                        "  \"config\": {",
                        "    \"allow-plugins\": {",
                        "      \"wikimedia/composer-merge-plugin\": true,",
                        "      \"phpstan/extension-installer\": true,",
                        "      \"theofidry/composer-inheritance-plugin\": true",
                        "    }",
                        "  }",
                        "}",
                        ""
                    ],
                    "executable": false
                },
                "vendor-bin/rector/composer.json": {
                    "contents": [
                        "{",
                        "  \"require-dev\": {",
                        "    \"rector/rector\": \"^0.19.2\",",
                        "    \"theofidry/composer-inheritance-plugin\": \"^1.2\",",
                        "    \"frosh/shopware-rector\": \"^0.3.0\"",
                        "  },",
                        "  \"config\": {",
                        "    \"allow-plugins\": {",
                        "      \"wikimedia/composer-merge-plugin\": true,",
                        "      \"theofidry/composer-inheritance-plugin\": true",
                        "    }",
                        "  }",
                        "}"
                    ],
                    "executable": false
                },
                "vendor-bin/rector/custom_rector.php": {
                    "contents": [
                        "<?php",
                        "",
                        "declare(strict_types=1);",
                        "",
                        "/*",
                        " * (c) KruseMedien GmbH <info@krusemedien.com>",
                        " * For the full copyright and license information, please view the LICENSE",
                        " * file that was distributed with this source code.",
                        " */",
                        "",
                        "use Frosh\\Rector\\Set\\ShopwareSetList;",
                        "use Rector\\Config\\RectorConfig;",
                        "use Rector\\ValueObject\\PhpVersion;",
                        "use Rector\\Naming\\Rector\\Class_\\RenamePropertyToMatchTypeRector;",
                        "use Rector\\Php74\\Rector\\LNumber\\AddLiteralSeparatorToNumberRector;",
                        "use Rector\\Set\\ValueObject\\SetList;",
                        "use Rector\\Symfony\\Set\\SymfonySetList;",
                        "use Rector\\Symfony\\Set\\TwigSetList;",
                        "",
                        "return static function (RectorConfig $rectorConfig): void {",
                        "    $rectorConfig->paths([",
                        "        __DIR__ . '/../../ecs.php',",
                        "        __DIR__ . '/../../rector.php',",
                        "        __DIR__ . '/../../src',",
                        "    ]);",
                        "",
                        "    $rectorConfig->skip([]);",
                        "",
                        "    $rectorConfig->sets([",
                        "        SymfonySetList::SYMFONY_52,",
                        "        SymfonySetList::SYMFONY_53,",
                        "        SymfonySetList::SYMFONY_54,",
                        "        SymfonySetList::SYMFONY_CODE_QUALITY,",
                        "        TwigSetList::TWIG_240,",
                        "        SetList::CODE_QUALITY,",
                        "        SetList::CODING_STYLE,",
                        "        SetList::NAMING,",
                        "        SetList::DEAD_CODE,",
                        "        SetList::PHP_72,",
                        "        SetList::PHP_73,",
                        "        SetList::PHP_74,",
                        "        SetList::PHP_80,",
                        "        SetList::PHP_81,",
                        "        SetList::PHP_82,",
                        "        SetList::TYPE_DECLARATION,",
                        "        SetList::PRIVATIZATION,",
                        "        ShopwareSetList::SHOPWARE_6_6_0,",
                        "        ShopwareSetList::SHOPWARE_6_5_0,",
                        "    ]);",
                        "",
                        "    $rectorConfig->phpVersion(PhpVersion::PHP_82);",
                        "",
                        "    $rectorConfig->skip([",
                        "        AddLiteralSeparatorToNumberRector::class => [",
                        "            __DIR__ . '/src/Migration/Migration*.php',",
                        "        ],",
                        "        RenamePropertyToMatchTypeRector::class => [",
                        "            __DIR__ . '/src/**/Subscriber/*Subscriber.php',",
                        "        ],",
                        "    ]);",
                        "",
                        "    $rectorConfig->parallel();",
                        "};"
                    ],
                    "executable": false
                }
            },
            "ref": "9e9725e28ea27a18361a012c670b0ecddf2bfe83"
        }
    }
}
